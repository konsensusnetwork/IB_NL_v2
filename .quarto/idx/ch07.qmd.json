{"title":"Accounts zonder identiteit","markdown":{"headingText":"Accounts zonder identiteit","containsRefs":false,"markdown":"\nWe hebben nu een gedistribueerd grootboek gebouwd zonder centrale\nautoriteit, een loterij om te bepalen wie erin mag schrijven, een\nsysteem om eerlijke miners te belonen en valsspelers te straffen, een\nmanier om de moeilijkheidsgraad aan te passen om een consistent\nuitgifteschema te garanderen en conflicten te verminderen en een systeem\nom de geldigheid van de keten te controleren door te kijken naar het\ncumulatieve *proof-of-work* en de transactiegeschiedenis.\n\nLaten we nu eens kijken naar identiteit. Om in een traditioneel\nbanksysteem geld te versturen moet je eerst jezelf identificeren bij de\nbank. Je geeft je identiteit (je bankpas) en pincode in bij de\ngeldautomaat, of typt je gebruikersnaam en wachtwoord in een mobiele\napp. De bank zorgt ervoor dat entiteiten niet dezelfde identiteit delen.\n\nHoe kunnen we in ons nieuwe op bitcoin gebaseerde financiële systeem een\nrekening openen zonder een centrale partij die de identiteiten bijhoudt?\nHoe kunnen we onze identiteit loskoppelen van financiële transacties,\nzodat identiteitsdiefstal voorkomen wordt en we niemand hoeven te\nvertrouwen met onze informatie? Hoe zorgen we ervoor dat wanneer Alice\naankondigt Bob te willen betalen, we kunnen garanderen dat zij het echt\nis en dat ze de bevoegdheid heeft om dat geld te verplaatsen?\n\n## Een bitcoinrekening aanmaken\n\nIn ons systeem bestaat geen centrale tussenpersoon (zoals een bank) om\nalle rekeninghouders te registreren. Wat als we iedereen zijn eigen\ngebruikersnaam en wachtwoord laten kiezen? Doorgaans controleert een\nbank of een gebruikersnaam al bestaat, maar dat is in ons geval\nonmogelijk aangezien er geen centrale partij is om nieuwe identiteiten\nuit te geven. Een gebruikersnaam en wachtwoord zijn in ons geval niet\nvoldoende. We zullen opnieuw een techniek moeten gebruiken die we al\nkennen uit eerdere hoofdstukken, namelijk gigantische willekeurige\ngetallen.\n\nDoor grote willekeurige getallen te genereren, kan iedereen loten kopen\nom mee te spelen met de loterij. We kunnen hetzelfde doen om rekeningen\naan te maken. Om een bitcoinrekening, of *adres*, aan te maken, zullen\nwe eerst twee 256-bits getallen genereren die wiskundig aan elkaar\ngekoppeld zijn --- een *publiek/privé-sleutelpaar*. Herinner dat een\n256-bits getal ongeveer even groot is als het aantal atomen in het\nheelal, dus twee mensen die per ongeluk hetzelfde sleutelpaar genereren\nis haast onmogelijk. We geven ons adres aan iedereen die ons geld wil\nsturen. We gebruiken de privésleutel om het geld weer uit te geven. Dit\nis hoe het werkt.\n\nVersleuteling is een methode om leesbare tekst om te zetten naar\ngeheimschrift, zodat alleen iemand die de sleutel heeft het originele\nbericht kan lezen door de versleuteling weer ongedaan te maken. Als\nkinderen speelden sommigen van ons al met speelgoed waar een enkele\nsleutel nodig was om een bericht in wartaal te veranderen, om het even\nlater met dezelfde sleutel weer te ontsleutelen. Dit soort codering\nwordt symmetrisch genoemd. Een systeem met een publiek/privé-sleutelpaar\nis *asymmetrisch*, omdat je met de ene sleutel kunt versleutelen en de\nandere moet gebruiken om weer te ontsleutelen.\n\nDe publieke sleutel kan je naar believen met de hele wereld delen.\nMensen die je berichten willen sturen kunnen ze versleutelen met je\npublieke sleutel, en omdat alleen jij de privésleutel bezit, ben jij de\nenige die de berichten kan decoderen.\n\nLaten we eens kijken hoe Alice munten naar Bob stuurt. Om een transactie\nte ontvangen genereert Bob een sleutelpaar en houdt hij zijn\nprivésleutel geheim. Hij genereert een *adres*; een lange reeks van\ncijfers en letters op basis van een hash van zijn publieke sleutel. Bob\ndeelt dit adres vervolgens met Alice.\n\nVergelijk dit adres met een brievenbus. In plaats van brieven kan Alice\nmunten in deze brievenbus laten vallen. Maar alleen Bob heeft de\nprivésleutel die nodig is om de brievenbus te openen en de munten te\nbesteden.\n\nWanneer je geld op de bank zet, geef je ze je gebruikersnaam en\nwachtwoord. Wanneer je cheques uitschrijft, onderteken je met je naam om\nte verifiëren dat jij het bent die de cheque uitschrijft. Wanneer je\nbitcoins wilt verplaatsen, toon je bewijs dat je de sleutel bezit van\nhet adres waar de munten bij horen.\n\nAlice moet bewijzen dat ze de privésleutel van haar publieke sleutel\nheeft. Ze wil haar privésleutel echter niet blootstellen aan hackers\nomdat ze dan haar munten uit haar brievenbus kunnen stelen.\n\nAlice's bewijs van sleutelbezit wordt een *digitale handtekening*\ngenoemd. Alice construeert een transactie die er ongeveer zo uit ziet:\n\n    Adres 12345 met 2,5 bitcoins \n    verstuurt 2 bitcoins naar adres 56789 en \n    stuurt 0.5 bitcoins terug naar adres 12345\n\nIn werkelijkheid zijn de adressen gigantische 160-bits getallen. Zij\nversleutelt vervolgens dezelfde transactie met haar privésleutel en\ngenereert daarmee een *digitale handtekening*.\n\nWanneer ze haar transactie publiceert naar de andere nodes op het\nnetwerk, onthult ze de publieke sleutel van de brievenbus van waaruit ze\nverzendt, en de digitale handtekening die ze met haar privésleutel heeft\ngegenereert. Alice kondigt het volgende aan:\n\n-   Ik stuur munten vanaf adres 12345\n\n-   Hier is de publieke sleutel voor adres 12345. Je zult zien dat als\n    je de publieke sleutel hasht, je hetzelfde adres zult verkrijgen.\n\n-   Hier is een handtekening die ik heb versleuteld met de privésleutel\n    die correspondeert met dit adres. Je kunt de publieke sleutel\n    gebruiken om deze te ontsleutelen en controleren of het overeenkomt\n    met mijn transactiedata.\n\n![Er wordt een digitale handtekening gegenereert door de transactie te versleutelen met de privésleutel. Dit kan worden ontsleuteld met behulp van de openbare sleutel, die bij iedereen bekend is.](images/fig13.png){#fig-figuur13}\n\n\nAangezien iedereen nu de publieke sleutel van de brievenbus van Alice\nheeft, kan de digitale handtekening eenvoudig worden ontsleuteld. Als de\nhandtekening kan worden ontsleuteld met de publieke sleutel van het\nadres, weet iedereen dat Alice in het bezit moet zijn van de\nbijbehorende privésleutel. Ontsleutelen was anders niet mogelijk\ngeweest, omdat de publieke sleutel alleen berichten kan ontsleutelen die\nzijn versleuteld met de bijbehorende privésleutel. Het is belangrijk om\nhierbij op te merken dat niemand haar privésleutel heeft gezien, maar\nwél het bewijs dat ze over de juiste privésleutel beschikt om haar\nhandtekening te zetten.\n\nIn tegenstelling tot je pincode of een handtekening op een cheque, is\neen digitale handtekening specifiek voor de unieke transactiegegevens\ndie je ondertekend. De handtekening kan dus niet worden gestolen en\nopnieuw worden gebruikt voor een andere transactie. Elke transactie\nkrijgt een andere handtekening, zelfs als deze wordt verzonden vanaf de\nhetzelfde publieke adres, met dezelfde privésleutel, aangezien alle\nnieuwe gegevens de handtekening wijzigen.\n\n## Kan je een privésleutel raden?\n\nLaten we eens kijken hoe groot de kans is om een privésleutel te raden,\nwat je de mogelijkheid zou geven om munten te verplaatsen van het\nbijbehorende publieke adres. Onthoud dat een sleutel uit 256-bits\nbestaat. Elke bit heeft slechts twee waarden (een of nul). Dat betekent\ndat je elk bit kunt visualiseren als het opgooien van een muntje.\n\nEen privésleutel van 1 bit is alsof we een munt opgooien. Kop of munt,\néén of nul? Je hebt een kans van één op twee om het goed te raden.\n\nBasis statistiek: de kans op verschillende gebeurtenissen wordt berekend\ndoor de individuele kans van elke gebeurtenis met elkaar te\nvermenigvuldigen. Als een munt $1/2$ kans heeft om kop te landen, dan is\nde kans om twee keer op rij kop te gooien $1/2 \\times 1/2 = 1/4$ of 1 op\n4.\n\nAls je de uitkomst van 8 munten op een rij zou moeten raden is dat\n$2^{8}$; een kans van één op 256.\n\nEen kentekenplaat heeft 6 letters en cijfers. Er zijn 26 letters en 10\ncijfers, dus in totaal 36 tekens. Het aantal mogelijke kentekenplaten is\ndus $36^{6}$, en je kans om de mijne te raden is dus een op de twee\nmiljard.[^18]\n\nEen kredietkaart bestaat uit zestien cijfers. Ieder cijfer heeft 10\nverschillende mogelijkheden, dus je kans om mijn kredietkaart te raden\nis $10^{16}$, dat is één op 10.000.000.000.000.000 of ongeveer één op\ntien quadriljoen.\n\nEr zijn ongeveer $10^{50}$ atomen op aarde. Als ik aan een willekeurig\natoom denk, is jouw kans om die te raden ongeveer\n\n        Één op 1.000.000.000.000.000.000.000.000.\n        000.000.000.000.000.000.000.000.000.\n\nEen privésleutel heeft 256 bits, wat gelijk is aan $2^{256}$ of ongeveer\n$10^{77}$. En daarmee is de kans om mijn volledige privésleutel correct\nte raden kleiner dan de kans op het raden van een specifiek atoom in het\nuniversum, of de kans om 10 keer achter elkaar de jackpot van de\nStaatsloterij te winnen.\n\nMaar wat nou als een super krachtige computer al het gokwerk voor je zou kunnen doen? Dit wordt het best uiteengezet in de Redditpost op [https://bit.ly/2Dbw9Qd](https://bit.ly/2Dbw9Qd) en ik raad het je aan om hem in zijn volledigheid te lezen. Hij is wellicht wat technisch, maar de laatste paragraaf geeft je een goed beeld wat er voor nodig is om alle mogelijke 256-bits sleutels te noteren:\n\n> Dus, als je de volledige planeet als harde schijf zou kunnen\n> gebruiken, 1 byte per atoom zou kunnen opslaan, de sterren gebruikt\n> als brandstof om je langs 1000 miljard sleutels te fietsen, dan heb je\n> 37 octiljoen ($10^{48}$) keer de aarde nodig voor opslag, en 237\n> miljard keer de zon om je apparaat van brandstof te voorzien, waar je\n> alles te samen 3.6717 octodeciljoen ($10^{57}$) over zult doen\n>\n> --- [u/PSBlake, R/Bitcoin]{.upright}\n\nHet is dus praktisch onmogelijk om iemands privésleutel te raden. Dat\nniet alleen; het aantal mogelijke bitcoinadressen is zo groot, dat het\naan te raden is om voor iedere transactie een nieuw adres met een nieuwe\nprivésleutel te genereren. Dus in plaats van een enkele bankrekening,\nzou je zo maar eens over duizenden of zelfs miljoenen bitcoin accounts\nkunnen beschikken. Namelijk 1 voor iedere transactie die je ooit hebt\nontvangen.\n\nHet is misschien verontrustend dat je bitcoin account slechts beveiligd\nis door toeval, maar hopelijk helpt de verklaring hierboven je om te\nbeseffen dat dit vele malen veiliger is dan de pincode tot je\nbankrekening, opgeslagen op een centrale server, en een eenvoudig doel\nvoor hackers.\n\n## Het saldo monitoren\n\nHet wordt tijd om een laatste leugentje van de voorgaande hoofdstukken\nte corrigeren. Er worden namelijk geen saldi bijgehouden op de\nblockchain. In plaats daarvan maakt bitcoin gebruik van zogeheten UTXO:\nUnspent Transaction Outputs. De transactie output is simpelweg een woord\nvoor de muten die je in een vorige transactie hebt ontvangen, ongeacht\nof je ze van iemand ontvangen hebt of door het minen hebt verkregen in\nde *coinbase transactie*.\n\nBitcoins zijn deelbaar in 100 miljoen eenheden die we satoshis noemen.\nDit in tegenstelling tot de metalen munten die vaak alleen in vooraf\ngespecificeerde eenheden voorkomen, zoals we bijvoorbeeld de 10 cent,\ntwintig cent en euro muntstukken kennen. Daarom zul je soms munten van\nverschillende adressen met elkaar moeten combineren, of juist een\ngrotere UTXO in tweeën moeten splitsen, om ze naar iemand anders te\nsturen. Zie het als het sturen van een stapel munten naar een machine\ndie ze omsmelten en nieuwe munten maken van elke waarde die u wilt.\nPortefeuilles, die later in dit hoofdstuk worden besproken, beheren dit\nover het algemeen allemaal achter de schermen, zodat u alleen het bedrag\nhoeft op te geven dat u wilt verzenden.\n\nLaten we zeggen dat Alice een adres heeft dat 1 bitcoin bevat. Ze wil\n0,3 bitcoins naar Bob sturen. Ze genereert een transactie die haar adres\ntoont met een 1 bitcoin UTXO als input en twee outputs: een nieuwe\nbitcoin UTXO ter waarde van 0.3 naar Bob's adres, en een nieuwe bitcoin\nUTXO ter waarde van 0.7 terug naar haar eigen adres als wisselgeld. Het\nwisselgeld kan naar haar oorspronkelijke verzendadres gaan, of voor een\nbetere privacy kan ze het naar een nieuw adres sturen dat ze ter plekke\ngenereert.\n\n![Als je geen UTXO hebt in het exacte bedrag dat je wilt sturen, dan zal er een worden gesplitst om wisselgeld te maken. Je kunt ook verschillende UTXO’s combineren om een nieuwe grotere te maken.](images/fig14.png){#fig-figuur14}\n\n\nEr is geen manier in de keten om te vertellen wie welk adres\ncontroleert. Daarvoor zou je de corresponderende private sleutels moeten\nkennen en ze moeten koppelen aan echte identiteiten. Het UTXO-model\nmoedigt een zeer mooi privacymechanisme aan door bij elke\nmuntverplaatsing het wisselgeld naar een nieuw adres te sturen. Zo kan\neen persoon honderden of duizenden adressen bezitten als hij vele malen\nmunten heeft verzonden of ontvangen. De software van de portemonnee\nbeheert dit alles voor ons, zodat we ons geen zorgen hoeven te maken\nover de details.\n\nDus, om het saldo van een bepaald adres te controleren, moeten we\neigenlijk alle UTXO's optellen die dit adres als uitgang hebben. De\ntotale set van huidige UTXO's in bitcoin groeit wanneer mensen van één\nadres naar veel adressen sturen, en krimpt wanneer mensen\nconsolidatietransacties uitvoeren waarbij munten van veel adressen aan\néén adres worden uitgegeven.\n\nHet UTXO-model maakt een eenvoudige en efficiënte validatie van dubbele\nuitgaven mogelijk, omdat een bepaalde UTXO maar één keer kan worden\nuitgegeven. Wij hoeven niet de hele geschiedenis van uitgaven van een\nbepaalde rekening te kennen.\n\nWe kunnen ook een willekeurig aantal UTXO's tegelijk creëren en\nvernietigen, waardoor complexe transacties ontstaan die verschillende\ninputs en outputs mixen. Dit maakt het idee van CoinJoin[^19] mogelijk,\nwaarbij verschillende partijen deelnemen aan een enkele\nbitcoin-transactie die een willekeurig aantal inputs mengt om een\nwillekeurig aantal outputs te produceren, en zo de geschiedenis van de\nUTXO's versluiert. De populariteit van dergelijke technieken neemt toe\nen is belangrijk voor de privacy en fungibiliteit, een term die zegt dat\nelke bitcoin gelijkwaardig is aan elke andere bitcoin. Op die manier,\nals sommige bitcoins in de handen van onfrisse partijen terechtkomen,\nzijn ze niet voor eeuwig bezoedeld alleen maar omdat ze een keer voor\niets snode zijn gebruikt.\n\n## Wallets\n\nEen account aanmaken is niets meer dan een willekeurig 256 bit\nsleutelpaar aanmaken. We kunnen duizenden of miljoenen accounts\naanmaken, dus hebben we een manier nodig om ze te traceren. In bitcoin\nwordt het woord portemonnee gebruikt om te verwijzen naar elk soort\napparaat dat uw sleutels bijhoudt. Dat kan zo simpel zijn als een stuk\npapier of zo complex als een stuk hardware.\n\nDe originele bitcoin-code die door Satoshi werd gepubliceerd, werd\ngeleverd met een software-portemonnee. Deze portemonnee genereerde uw\nadressen voor u, sloeg uw sleutels op en selecteerde UTXO's voor u om\nuit te geven, zodat u gemakkelijk bitcoins van elke waarde kon\nversturen.\n\nIn tegenstelling tot de portemonnee van uw bank, die meestal de vorm\nheeft van een mobiele of webapplicatie die door uw bank is gemaakt, is\nbitcoin een volledig open systeem. Daarom zijn er tientallen\nportemonnees, waarvan de meeste gratis zijn, en veel ook open source,\nevenals een half dozijn implementaties van hardware-portemonnees en er\nkomen er nog meer. Iedereen met kennis van computerprogrammering kan\nzijn eigen portemonnee bouwen of de code van een open source portemonnee\nlezen om er zeker van te zijn dat er niets vals aan de hand is.\n\nOmdat je private key het enige is dat je nodig hebt om je munten uit te\ngeven, moet je die goed bewaken. Als iemand uw kredietkaart steelt, kunt\nu het bedrijf bellen en een fraudeklacht indienen en proberen uw geld\nterug te krijgen. Bij bitcoin is er geen tussenpersoon. Als iemand uw\nprivésleutel heeft, heeft hij uw munten in handen, en er is niemand die\nu kunt bellen.\n\nPrive-sleutels zijn ook gevoelig voor verlies. Als u uw portemonnee op\nuw computer bewaart en de computer wordt gestolen of vliegt in brand,\ndan heeft u een probleem. Als u de beste bitcoin-praktijken volgt en\nelke keer dat u betalingen ontvangt een nieuw adres genereert, wordt het\nveilig opslaan en back-uppen van deze privésleutels al snel een lastige\nzaak.\n\nIn de loop der tijd heeft het bitcoin-ecosysteem een aantal oplossingen\nvoor dit probleem ontwikkeld. In 2012 werd BIP32 (Bitcoin Improvement\nProposal, een mechanisme voor mensen om ideeën te verspreiden over hoe\nbitcoin verbeterd kan worden) voorgesteld om Hierarchical Deterministic\nWallets te maken. Het idee hierachter is dat we met slechts één\nwillekeurig getal, een se d genaamd, continu vele sleutelparen kunnen\ngenereren die bitcoinadressen en privésleutels voor hen\nvertegenwoordigen.\n\nAls u tegenwoordig een van de algemeen beschikbare software- of\nhardware-portemonnees gebruikt, genereert deze automatisch nieuwe\nsleutels voor u voor elke transactie, zodat u slechts één hoofdsleutel\nhoeft te back-uppen.\n\nIn 2013 kwam BIP39 om het back-uppen van sleutels nog eenvoudiger te\nmaken. In plaats van een willekeurig getal te gebruiken, zouden sleutels\nworden gegenereerd uit een willekeurige set van door mensen leesbare\nwoorden. Hier is een voorbeeld van een seed:\n\n        witch   collapse    practice    feed\n        shame   open        despair     creek\n        road    again       ice         least\n\nMet deze methode werd het back-uppen van sleutels heel eenvoudig: je kon\nhet zaad op een stuk papier schrijven en het in een kluisje stoppen. Je\nzou de zin zelfs uit je hoofd kunnen leren en uit een falend economisch\nregime als Venezuela weg kunnen lopen zonder iets bij je te hebben,\nzonder dat iemand er iets van merkt dat je je rijkdom in je hoofd\nmeedraagt.\n\nBovendien kan een bitcoin-adres meer dan één privé-sleutel vereisen om\ntoegang te krijgen. Adressen met verschillende handtekeningen of\nmultisig-adressen kunnen een grote verscheidenheid aan\nbeveiligingssystemen gebruiken. Twee mensen kunnen bijvoorbeeld een\nrekening delen met 1-of-2 multisig, waarbij elke partij kan tekenen voor\ntransacties en munten kan uitgeven.\n\nEen 2-of-2 multisig die vereist dat beide partijen sleutels leveren om\nuit te geven kan worden gebruikt om te voorkomen dat een enkele persoon\ncontrole krijgt over een rekening, bijvoorbeeld tussen zakenpartners.\n\nJe kunt een eenvoudig escrow-systeem maken met een 2-van-3 multisig. De\nkoper krijgt een sleutel, de verkoper krijgt een andere sleutel, en een\nderde sleutel wordt aan een arbiter gegeven. Als koper en verkoper het\neens zijn, kunnen ze samen de fondsen deblokkeren. In het geval van een\ngeschil kan de arbiter samen met een van de partijen optreden om de\nfondsen te deblokkeren.\n\nU kunt een 3-of-5 multisig schema gebruiken om uzelf te beschermen tegen\nhet verlies van sleutels door uzelf toe te staan maximaal 2 van de 5\nsleutels te verliezen en nog steeds in staat te zijn de rekening te\ndeblokkeren. U kunt twee van de sleutels op verschillende plaatsen\nbewaren, twee bij verschillende betrouwbare vrienden die elkaar niet\nkennen, en één bij een gespecialiseerde bewaardienst zoals BitGo die uw\ntransacties mede ondertekent, waardoor uw bitcoin zeer moeilijk te\nstelen is terwijl u uzelf beschermt tegen het verlies van sleutels.\n\nU kunt zelfs nog verder gaan en adressen maken die ontgrendeld worden\ndoor vrij complexe voorwaarden met behulp van programmeerconstructies\nzoals voorwaardelijke verklaringen (\\\"als dit, dan dat\\\"). Je zou zelfs\nmunten kunnen opsluiten in een adres dat pas over 10 jaar toegankelijk\nis, en zelfs jij als maker van zo'n adres kunt niet van gedachten\nveranderen en de code veranderen om die munten voor die tijd uit te\ngeven.\n\nEr komen steeds meer semi-custodiale oplossingen van bedrijven zoals\nCasa en Unchained Capital, die u helpen om sleutels op een veilige\nmanier op te slaan. In tegenstelling tot een bank, die je rekening kan\nbevriezen, fungeren deze oplossingen voor gedeeltelijke bewaring als een\nback-up of vertrouwde medeondertekenaar, maar kunnen ze zelf je fondsen\nniet meenemen zonder je sleutels. Portefeuillesoftware evolueert\nvoortdurend omdat daarvoor niemands toestemming nodig is, in\ntegenstelling tot de app van je bank. Daarom zien we steeds meer nieuwe\ntoetreders en meer innovatie.\n\nDit is ingrijpend en wereldveranderend. Nooit eerder was het mogelijk om\nje vermogen bij je te dragen op een manier die volledig veilig is tegen\ninbeslagname of diefstal.\n\n[^18]: De inspiratie voor dit gedeelte kwam van een uitstekende Medium\n    post die de waarschijnlijkheid van een aantal gebeurtenissen in\n    detail beschrijft. Ik raad aan de volledige post te lezen voor de\n    context:\n    <https://medium.com/@kerbleski/a-dance-with-infinity-980bd8e9a781>\n\n[^19]: [Zie https://en.bitcoin.it/wiki/CoinJoin](https://en.bitcoin.it/wiki/CoinJoin)\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"ch07.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.335","theme":"cosmo","fontsize":"1.1em","linestretch":1.7},"extensions":{"book":{"multiFile":true}}},"pdf":{"execute":{"fig-width":5.5,"fig-height":3.5,"fig-format":"pdf","fig-dpi":300,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":true,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"pdf","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"pdf-engine":"xelatex","standalone":true,"variables":{"graphics":true,"tables":true},"default-image-extension":"pdf","to":"pdf","toc":true,"number-sections":true,"output-file":"ch07.pdf"},"language":{},"metadata":{"block-headings":true,"documentclass":"scrbook","toc-title":"Inhoudsopgave","colorlinks":true,"fontfamily":"Alegreya","geometry":["top=30mm","left=20mm","heightrounded"]},"extensions":{"book":{}}},"epub":{"execute":{"fig-width":5,"fig-height":4,"fig-format":"png","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"epub","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"default-image-extension":"png","to":"epub","output-file":"ch07.epub"},"language":{},"metadata":{"cover-image":"cover.png"},"extensions":{"book":{}}}}}